import React, { useState } from 'react';

// Path for the uploaded SC GBS logo.
const LOGO_SRC = 'uploaded:Scgbs.png-d9d3f50b-d31f-4ef5-8467-491afa42bfdc';

/**
 * Renders the user registration screen.
 * It uses the 'onNavigate' prop to switch back to the Login screen upon successful signup 
 * or when the user clicks the "Log In" link.
 * * NOTE: CSS is included directly in the <style> tag to ensure compilation stability.
 */
function SignUpScreen({ onNavigate }) {
    // --- STATE MANAGEMENT ---
    const [fullName, setFullName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [phone, setPhone] = useState('');
    const [agreedToTerms, setAgreedToTerms] = useState(false);
    
    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);

    // --- HANDLERS ---
    const togglePasswordVisibility = () => {
        setShowPassword(prev => !prev);
    };

    const toggleConfirmPasswordVisibility = () => {
        setShowConfirmPassword(prev => !prev);
    };

    const handleSubmit = (event) => {
        event.preventDefault();

        // 1. Validation Checks
        if (!agreedToTerms) {
            console.error('You must agree to the Terms and Privacy Policy to sign up.');
            // In a real app, display a visible error message to the user here.
            return;
        }

        if (password !== confirmPassword) {
            console.error('Error: Password and Confirm Password do not match.');
            // In a real app, display a visible error message next to the fields.
            return;
        }

        // 2. Mock Registration Logic (Replace with actual API call here)
        const newUser = { fullName, email, phone };
        console.log('Attempting to register new user:', newUser);
        
        // 3. Navigate back to the Login screen after successful mock registration
        console.log(`Success! Account created for ${fullName}. Navigating to Login.`);
        // This is the key line that navigates to the login page:
        onNavigate('login');
    };

    // Helper function for the eye icon using Font Awesome
    const EyeIcon = ({ isVisible, toggleFunction }) => (
        <span 
            className="password-toggle-icon" 
            onClick={toggleFunction} 
        >
            {/* Font Awesome icons (fas fa-eye or fas fa-eye-slash) */}
            <i className={isVisible ? 'fas fa-eye' : 'fas fa-eye-slash'}></i>
        </span>
    );


    return (
        <>
            <style>{`
                /* --- Page Layout and Background --- */
                .login-page-container {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    min-height: 100vh;
                    padding: 20px;
                    background-color: #f5f5f5; /* Light grey background */
                    font-family: Arial, sans-serif;
                }

                /* --- Card Container --- */
                .signup-card {
                    max-width: 400px;
                    width: 100%;
                    padding: 30px;
                    border-radius: 12px;
                    background-color: white;
                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                }

                /* --- Header and Logo --- */
                .text-center {
                    text-align: center;
                }

                .mb-4 {
                    margin-bottom: 1.5rem;
                }

                .logo-img {
                    max-width: 60px;
                    height: auto;
                    margin-bottom: 1rem;
                }

                .welcome-text {
                    font-size: 1.5rem;
                    font-weight: 700;
                    color: #333;
                }

                /* --- Form Groups and Inputs --- */
                .form-group {
                    margin-bottom: 1rem;
                }

                .form-control {
                    padding: 10px;
                    width: 100%;
                    border-radius: 6px;
                    border: 1px solid #ccc;
                    box-sizing: border-box; 
                    transition: border-color 0.2s;
                }
                
                .form-control:focus {
                    border-color: #007bff;
                    outline: none;
                }

                /* Password input specific styles */
                .password-input-container {
                    position: relative;
                }

                .password-toggle-icon {
                    position: absolute;
                    right: 10px;
                    top: 50%;
                    transform: translateY(-50%);
                    cursor: pointer;
                    color: #555;
                    font-size: 1.2rem;
                    z-index: 10; 
                }

                /* --- Terms and Conditions --- */
                .terms-checkbox {
                    margin-bottom: 1.5rem;
                    font-size: 0.9rem;
                }

                .terms-checkbox label {
                    display: flex;
                    align-items: center;
                    cursor: pointer;
                }

                .terms-checkbox input[type="checkbox"] {
                    margin-right: 8px;
                    /* Basic checkbox styling */
                    width: 16px;
                    height: 16px;
                }

                .terms-checkbox a {
                    color: #007bff;
                    margin-left: 5px;
                    margin-right: 5px;
                    text-decoration: none;
                }

                /* --- Sign Up Button --- */
                .log-in-btn {
                    width: 100%;
                    padding: 12px;
                    border-radius: 6px;
                    background-color: #007bff; /* Primary blue color */
                    color: white;
                    border: none;
                    font-size: 1rem;
                    font-weight: 600;
                    cursor: pointer;
                    transition: background-color 0.2s, transform 0.1s;
                }

                .log-in-btn:hover {
                    background-color: #0056b3; /* Darker blue on hover */
                }
                
                .log-in-btn:active {
                    transform: scale(0.99);
                }

                /* --- Log In Link --- */
                .mt-3 {
                    margin-top: 1.5rem;
                }

                .signup-link {
                    color: #007bff;
                    margin-left: 5px;
                    text-decoration: none;
                    font-weight: 600;
                    transition: color 0.2s;
                }
                
                .signup-link:hover {
                    text-decoration: underline;
                    color: #0056b3;
                }
            `}</style>
            
            {/* Uses .login-page-container defined in CSS */}
            <div className="login-page-container">
                
                {/* Uses .signup-card defined in CSS */}
                <div className="card login-card shadow-lg signup-card">
                    <div className="text-center mb-4">
                        <img 
                            src={LOGO_SRC} 
                            alt="SC GBS Logo" 
                            className="logo-img" // Uses .logo-img defined in CSS
                        />
                        <h1 className="welcome-text">
                            Join Standard Chartered
                        </h1>
                    </div>

                    <form onSubmit={handleSubmit}>
                        
                        <div className="form-group">
                            <input
                                type="text"
                                className="form-control" // Uses .form-control defined in CSS
                                placeholder="Full Name"
                                value={fullName}
                                onChange={(e) => setFullName(e.target.value)}
                                required
                            />
                        </div>

                        <div className="form-group">
                            <input
                                type="email"
                                className="form-control"
                                placeholder="Email Address"
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                required
                            />
                        </div>

                        <div className="form-group password-input-container">
                            <input
                                type={showPassword ? 'text' : 'password'}
                                className="form-control"
                                placeholder="Password"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                required
                            />
                            <EyeIcon isVisible={showPassword} toggleFunction={togglePasswordVisibility} />
                        </div>
                        
                        <div className="form-group password-input-container">
                            <input
                                type={showConfirmPassword ? 'text' : 'password'}
                                className="form-control"
                                placeholder="Confirm Password"
                                value={confirmPassword}
                                onChange={(e) => setConfirmPassword(e.target.value)}
                                required
                            />
                            <EyeIcon isVisible={showConfirmPassword} toggleFunction={toggleConfirmPasswordVisibility} />
                        </div>

                         <div className="form-group">
                            <input
                                type="tel"
                                className="form-control"
                                placeholder="Phone Number (Optional)"
                                value={phone}
                                onChange={(e) => setPhone(e.target.value)}
                            />
                        </div>

                        <div className="form-group terms-checkbox">
                            <label>
                                <input
                                    type="checkbox"
                                    checked={agreedToTerms}
                                    onChange={(e) => setAgreedToTerms(e.target.checked)}
                                />
                                I agree to the <a href="#">Terms & Conditions</a> and <a href="#">Privacy Policy</a>
                            </label>
                        </div>

                        <button type="submit" className="log-in-btn">
                            Sign Up
                        </button>
                    </form>

                    {/* LOG IN LINK: This section handles the navigation back to 'login' */}
                    <div className="text-center mt-3">
                        <p>
                            Already have an account? 
                            <a 
                                href="#" 
                                className="signup-link" 
                                onClick={(e) => { e.preventDefault(); onNavigate('login'); }} // Navigates to the Login page
                            >
                                Log In
                            </a>
                        </p>
                    </div>
                </div>
            </div>
        </>
    );
}

export default SignUpScreen;
