package com.scgbs.hwttool.controller;

import com.scgbs.hwttool.dto.ForgotPasswordRequest;
import com.scgbs.hwttool.dto.ResetPasswordRequest;
import com.scgbs.hwttool.entity.User;
import com.scgbs.hwttool.repository.UserRepository;
import com.scgbs.hwttool.service.EmailService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping("/api/auth")
public class ForgotPasswordController {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private EmailService emailService;

    @Autowired
    private PasswordEncoder passwordEncoder;

    // ✅ Step 1 → send email
    @PostMapping("/forgot-password")
    public ResponseEntity<?> forgotPassword(@RequestBody ForgotPasswordRequest request) {

        Optional<User> userOptional = userRepository.findByEmail(request.getEmail());

        if (userOptional.isEmpty()) {
            return ResponseEntity.badRequest().body("Email does not exist");
        }

        String resetLink = "http://localhost:3000/reset-password?email=" + request.getEmail();

        emailService.sendEmail(
                request.getEmail(),
                "Password Reset Link",
                "Click to reset password: " + resetLink
        );

        return ResponseEntity.ok("Reset link sent successfully!");
    }

    // ✅ Step 2 → update password
    @PostMapping("/reset-password")
    public ResponseEntity<?> resetPassword(@RequestBody ResetPasswordRequest request) {

        Optional<User> userOptional = userRepository.findByEmail(request.getEmail());

        if (userOptional.isEmpty()) {
            return ResponseEntity.badRequest().body("Invalid email");
        }

        User user = userOptional.get();
        user.setPassword(passwordEncoder.encode(request.getNewPassword()));
        userRepository.save(user);

        return ResponseEntity.ok("Password updated successfully!");
    }
}
