package com.scgbs.rwtool.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.scgbs.rwtool.service.ForgotPasswordService;

import java.util.Map;

@RestController
@RequestMapping("/api/auth")
@CrossOrigin(origins = "*") // optional, if you call from React or Postman
public class ForgotPasswordController {

    @Autowired
    private ForgotPasswordService forgotPasswordService;

    // ✅ Step 1: Endpoint to send reset link
    @PostMapping("/forgot-password")
    public ResponseEntity<String> forgotPassword(@RequestBody Map<String, String> request) {
        String email = request.get("email");

        boolean success = forgotPasswordService.processForgotPassword(email);

        if (success) {
            return ResponseEntity.ok("Password reset link sent to email.");
        } else {
            return ResponseEntity.status(404).body("User not found.");
        }
    }

    // ✅ Step 2 (optional, for later): Endpoint to actually reset password
    // (You can add this after your reset-password frontend page is ready)
    /*
    @PostMapping("/reset-password")
    public ResponseEntity<String> resetPassword(@RequestBody Map<String, String> request) {
        String token = request.get("token");
        String newPassword = request.get("newPassword");

        boolean success = forgotPasswordService.resetPassword(token, newPassword);

        if (success) {
            return ResponseEntity.ok("Password has been reset successfully.");
        } else {
            return ResponseEntity.status(400).body("Invalid or expired token.");
        }
    }
    */
}
